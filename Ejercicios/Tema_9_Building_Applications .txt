=========================
TEMA 9 - BUILDING APPLICATIONS IN OPENSHIFT
=========================

----------
GUIDED 1 - Integrating an External Service
----------

########################
# CONECTAR: FRONTAL => BASE DATOS EXTERNA
#   En otro cluster
#   O en internet
########################

0.- Start
--------
[student@workstation ~]$ lab external-service start

1.- Login to Project + check pods 
--------
[student@workstation ~]$ source /usr/local/etc/ocp4.config
[student@workstation ~]$ oc login -u ${RHT_OCP4_DEV_USER}  -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
[student@workstation ~]$ oc project ${RHT_OCP4_DEV_USER}-external-service
[student@workstation ~]$ oc status
[student@workstation ~]$ oc get pod
[student@workstation ~]$ oc rsh todoapp-1-6z6qg env | grep DATABASE

2.- Extract URL + Verify
--------
[student@workstation ~]$ HOSTNAME=$(oc get route todoapp  -o jsonpath='{.spec.host}')
[student@workstation ~]$ echo ${HOSTNAME}
[student@workstation ~]$ curl -si http://${HOSTNAME}/todo/api/items/6

3.- Verify MySQL is up and running
--------
[student@workstation ~]$ echo mysql.ocp-${RHT_OCP4_WILDCARD_DOMAIN#"apps."}
[student@workstation ~]$ mysqlshow -hmysql.cluster.domain.example.com  -utodoapp -predhat123 todo

4.- Create external service
--------
[student@workstation ~]$ oc create svc externalname tododb  --external-name mysql.cluster.domain.example.com
[student@workstation ~]$ oc get svc
[student@workstation ~]$ curl -si http://${HOSTNAME}/todo/api/items/6

5.- Delete project
--------
[student@workstation ~]$ oc delete project ${RHT_OCP4_DEV_USER}-external-service

6.- Finish
--------
[student@workstation ~]$ lab external-service finish


----------
GUIDED 2 - Deploying a Containerized Nexus Server
----------

0.- Start
--------
[student@workstation ~]$ lab nexus-service start

1.- Upload image to Quaio
--------
[student@workstation ~]$ cd ~/DO288-apps/nexus3
[student@workstation nexus3]$ git checkout master
[student@workstation nexus3]$ grep VOLUME Dockerfile
[student@workstation nexus3]$ grep NEXUS_DATA Dockerfile
[student@workstation nexus3]$ grep ENV Dockerfile
[student@workstation nexus3]$ source /usr/local/etc/ocp4.config
[student@workstation nexus3]$ sudo podman build -t nexus3 .
[student@workstation nexus3]$ sudo podman login -u ${RHT_OCP4_QUAY_USER} quay.io
[student@workstation nexus3]$ sudo skopeo copy containers-storage:localhost/nexus3 docker://quay.io/${RHT_OCP4_QUAY_USER}/nexus3
[student@workstation nexus3]$ sudo skopeo copy  docker://quay.io/redhattraining/nexus3:latest  docker://quay.io/${RHT_OCP4_QUAY_USER}/nexus3

2.- Setup DeploymentConfig
--------
[student@workstation nexus3]$ cp ~/DO288/labs/nexus-service/nexus-template.yaml  ~/nexus-template.yaml
[student@workstation nexus3]$ cd ~
[student@workstation ~]$ 
[student@workstation ~]$ grep -A1 "kind: DockerImage" ~/nexus-template.yaml 
[student@workstation ~]$ grep -B1 -A5 limits: ~/nexus-template.yaml

____ 2.1.- Environment 
[student@workstation ~]$ vim ~/nexus-template.yaml 
...output omitted...
- apiVersion: v1
 kind: DeploymentConfig
 ...output omitted...
 - env:
 - name: INSTALL4J_ADD_VM_PARAMS
 value: -Djava.util.prefs.userRoot=/nexus-data/javaprefs -----> CHANGE THIS
...output omitted


____ 2.2.- Healthchecks 
[student@workstation ~]$ vim nexus-template.yaml f
........
...output omitted...
- apiVersion: v1
 kind: DeploymentConfig
 ...output omitted...
 livenessProbe:
 exec:
 command:
 - /bin/sh
 - "-c"
 - >
 curl -siu admin:$(cat /nexus-data/admin.password)
 http://localhost:8081/service/metrics/healthcheck |
 grep healthy | grep true
 ...output omitted...
 initialDelaySeconds: 120  --------------> CHECK THIS
 ...output omitted...
 timeoutSeconds: 30 ---------------------> CHECK THIS
...output omitted...

____ 2.3.- Readiness 
[student@workstation ~]$ vim nexus-template.yaml f
...output omitted...
- apiVersion: v1
 kind: DeploymentConfig
 ...output omitted...
 readinessProbe:
 exec:
 command:
 - /bin/sh
 - "-c"
 - >
 curl -siu admin:$(cat /nexus-data/admin.password)
 http://localhost:8081/service/metrics/ping |
 grep pong
 ...output omitted...
 initialDelaySeconds: 120
 ...output omitted...
 timeoutSeconds: 30
...output omitted


____ 2.4.- Volumes
...output omitted...
- apiVersion: v1
 kind: DeploymentConfig
 ...output omitted...
 volumeMounts:
 - mountPath: /nexus-data  -----> CHANGE THIS
 name: nexus-data          -----> CHANGE THIS
...output omitted


____ 2.5.- PVC
...output omitted...
- apiVersion: v1
 kind: DeploymentConfig
 ...output omitted...
 volumes:
 - name: nexus-data
 persistentVolumeClaim:
 claimName: nexus-data-pvc
...output omitted


____ 2.6.- 
...output omitted...
- apiVersion: v1
 kind: PersistentVolumeClaim
 metadata:
 labels:
 app: ${NEXUS_SERVICE_NAME}
 name: nexus-data-pvc
...output omitted...


[student@workstation ~]$ diff  ~/DO288/solutions/nexus-service/nexus-template.yaml ./nexus-template.yaml
[student@workstation ~]$ cp  ~/DO288/solutions/nexus-service/nexus-template.yaml ./nexus-template.yaml


3.- Create Project + Secrets for pull permissions
--------
[student@workstation ~]$ oc login -u ${RHT_OCP4_DEV_USER}  -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
[student@workstation ~]$ oc new-project ${RHT_OCP4_DEV_USER}-nexus-service
[student@workstation ~]$ podman login -u ${RHT_OCP4_QUAY_USER} quay.io
[student@workstation ~]$ oc create secret generic quayio  --from-file .dockerconfigjson=${XDG_RUNTIME_DIR}/containers/auth.json  --type kubernetes.io/dockerconfigjson
[student@workstation ~]$ oc secrets link default quayio --for pull

4.- Deploy Nexus
--------
[student@workstation ~]$ oc new-app --as-deployment-config --name nexus3  -f ~/nexus-template.yaml  -p HOSTNAME=nexus-${RHT_OCP4_DEV_USER}.${RHT_OCP4_WILDCARD_DOMAIN}
[student@workstation ~]$ oc get pods
[student@workstation ~]$ oc logs -f nexus3-1-kfwwh
[student@workstation ~]$ oc get pods

5.- Verify in Firefox
--------
[student@workstation ~]$ oc get route
Firefox -> 

6.- Delete project 
--------
[student@workstation ~]$ oc delete project ${RHT_OCP4_DEV_USER}-nexus-service
[student@workstation ~]$ skopeo delete  docker://quay.io/${RHT_OCP4_QUAY_USER}/nexus3
Firefox -> https://quay.io/user/andepiel45
..... Delete Repository

7.- Finish
--------
[student@workstation ~]$ lab nexus-service finish

----------
GUIDED 3 - Deploying an Application with Red Hat OpenShift Application Runtimes
----------

######################
#  Integrar OpenShift 
#      con herramientas de construccion
# 
# CONSTRUIR DESDE MAVEN
#######################

0.- Start
--------
[student@workstation ~]$ lab micro-java start

1.- Check Source Code
--------
[student@workstation ~]$ cd ~/DO288-apps/micro-java
[student@workstation micro-java]$ git checkout master
[student@workstation micro-java]$ git checkout -b micro-config
[student@workstation micro-java]$ git push -u origin micro-config
[student@workstation micro-java]$ vim src/main/java/com/redhat/training/openshift/hello/JaxRsActivator.java
........
...output omitted...
@ApplicationPath("/api")    --------------------------> CHECK THIS
public class JaxRsActivator extends Application {
}
...output omitted...

[student@workstation micro-java]$ vim src/main/java/com/redhat/training/openshift/hello/HelloResource.java
.........
package com.redhat.training.openshift.hello;

import javax.inject.Inject;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;

@Path("/")
public class HelloResource {   -------------------> 1)

 @GET
 @Path("/hello") ---------------------------------> 2)
 @Produces("text/plain")

 public String hello() {
	 String hostname = System.getenv().getOrDefault("HOSTNAME", "unknown"); ---> 3)
	 String message = System.getenv().getOrDefault("APP_MSG", null); ----------> 4)
	 String response = "";

	 if (message == null) {
	 response = "Hello world from host "+hostname+"\n"; ----------> 5)
	 } else {
	 response = "Hello world from host ["+hostname+"].\n";
	 response += "Message received = "+message+"\n"; -------------> 6)
	 } 
	 return response;
 }
}
.........

2.- Verify Maven construction
--------
[student@workstation micro-java]$ vim pom.xml
.........
<?xml version="1.0" encoding="UTF-8"?>
...output omitted...
 <groupId>com.redhat.training.openshift</groupId>
 <artifactId>hello</artifactId>  ================> 1)
 <version>1.0</version> =========================> 2)
...output omitted...
 <properties>
...output omitted...
 <!-- Thorntail dependency versions -->
 <version.thorntail>2.4.0.Final</version.thorntail> ===> 3)

 <!-- other plugin versions -->
...output omitted...
 <version.fabric8.plugin>4.1.0</version.fabric8.plugin> ====> 4)
...output omitted...
 </properties>
...output omitted...

---------------------------------------------------

...output omitted...
 <build>
...output omitted...
 <plugins>
...output omitted...
    <plugin>  -------------------------> 1)
       <groupId>io.thorntail</groupId>
       <artifactId>thorntail-maven-plugin</artifactId>
       <version>${version.thorntail}</version>
...output omitted...
    </plugin>
    <plugin>  -------------------------> 2)
       <groupId>io.fabric8</groupId>
       <artifactId>fabric8-maven-plugin</artifactId>
       <version>${version.fabric8.plugin}</version>
       <executions>
          <execution>
            <id>fmp</id>
                <goals>
                   <goal>resource</goal>
                   <goal>build</goal>
                </goals>
          </execution>
       </executions>
   </plugin>
 </plugins>
</build>
...output omitted...

3.- Shoot Maven Construction
--------
[student@workstation micro-java]$ mvn clean
...output omitted...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------

...output omitted

[student@workstation micro-java]$ mvn fabric8:resource
[INFO] Scanning for projects...
...output omitted...
[INFO] --- fabric8-maven-plugin:4.1.0:resource (default-cli) @ hello ---
...output omitted...
[INFO] F8: fmp-controller: Adding a default DeploymentConfig
[INFO] F8: fmp-service: Adding a default service 'hello' with ports [8080]
[INFO] F8: fmp-revision-history: Adding revision history limit to 2
[INFO] F8: validating .../fabric8/openshift/hello-service.yml ...
[INFO] F8: validating .../fabric8/openshift/hello-deploymentconfig.yml ...
[INFO] F8: validating .../fabric8/openshift/hello-route.yml resource
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
...output omitted...


[student@workstation micro-java]$ vim target/classes/META-INF/fabric8/openshift/hello-deploymentconfig.yml 
.......
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
...output omitted...
 name: hello
spec:
 replicas: 1
...output omitted...
 template:
   spec:
     containers:
      - env:
         - name: KUBERNETES_NAMESPACE
           valueFrom:
             fieldRef:
               fieldPath: metadata.namespace
               image: hello:1.0
...output omitted...

[student@workstation micro-java]$ vim target/classes/META-INF/fabric8/openshift/hello-service.yml 
---
apiVersion: v1
kind: Service
metadata:
...output omitted...
 name: hello
spec:
 ports:
 - name: http
   port: 8080
   protocol: TCP
     targetPort: 8080
 selector:
   app: hello
   provider: fabric8
   group: com.redhat.training.openshift
.......

[student@workstation micro-java]$ vim target/classes/META-INF/fabric8/openshift/hello-route.yml 
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
...output omitted
 name: hello
spec:
 port:
 targetPort: 8080
 to:
 kind: Service
 name: hello


[student@workstation micro-java]$ vim target/classes/META-INF/fabric8/openshift.yml 
----
...output omitted...
kind: "List"
...output omitted...
 kind: "Service"
...output omitted...
 kind: "DeploymentConfig"
...output omitted...
 kind: "Route"
...output omitted...


4.- Deploy from Maven
--------
[student@workstation micro-java]$ source /usr/local/etc/ocp4.config
[student@workstation micro-java]$ oc login -u ${RHT_OCP4_DEV_USER}  -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
[student@workstation micro-java]$ oc new-project ${RHT_OCP4_DEV_USER}-micro-java
[student@workstation micro-java]$ mvn fabric8:deploy
[INFO] Scanning for projects...
...output omitted...
[INFO] --- fabric8-maven-plugin:4.1.0:resource (fmp) @ hello ---
...output omitted...
[INFO] --- fabric8-maven-plugin:4.1.0:build (fmp) @ hello ---
[INFO] F8: Running in OpenShift mode
[INFO] F8: Using OpenShift build with strategy S2I
[INFO] F8: Running generator thorntail-v2
...output omitted...
[INFO] --- fabric8-maven-plugin:4.1.0:deploy (default-cli) @ hello ---
[INFO] F8: Using OpenShift ... with manifest .../openshift.yml
[INFO] OpenShift platform detected
[INFO] F8: Using project: youruser-micro-java
[INFO] F8: Creating a Service from openshift.yml ... name hello
...output omitted...
[INFO] F8: Creating a DeploymentConfig from openshift.yml name hello
...output omitted...
[INFO] F8: Creating Route youruser-micro-java:hello host: null
[INFO] F8: HINT: Use the command `oc get pods -w` to watch your pods start up
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
...output omitted...

5.- Verify deployment
--------
[student@workstation micro-java]$ oc status
In project youruser-micro-java on server ...

http://hello-youruser-micro-java... to pod port 8080 (svc/hello)
 dc/hello deploys istag/hello:1.0 <- bc/hello-s2i source builds ...
 deployment #1 deployed 2 minutes ago - 1 pod
...output omitted...


6.- Test URL
--------
[student@workstation micro-java]$ oc get pods
[student@workstation DO288-apps]$ ROUTE_URL=$(oc get route  hello --template='{{.spec.host}}') 
[student@workstation DO288-apps]$ curl ${ROUTE_URL}/api/hello


7.- Change Source Code + Shoot Maven Build
--------
[student@workstation DO288-apps]$ vim ~/DO288/labs/micro-java/cm.yml
.....
apiVersion: v1
kind: ConfigMap
metadata:
 name: env-config
data:
 APP_MSG: sample external configuration
......

[student@workstation DO288-apps]$ vim ~/DO288/labs/micro-java/deployment.yml
spec:
 template:
 spec:
 containers:
 - envFrom:
 - configMapRef:
 name: env-config

[student@workstation micro-java]$ cp -v ~/DO288/labs/micro-java/*.yml  ./src/main/fabric8/
[student@workstation micro-java]$ git add src/main/fabric8/*.yml
[student@workstation micro-java]$ git commit -am "Add YAML fragments."

8.- Redeploy from MAVEN
--------
[student@workstation micro-java]$ mvn fabric8:deploy
[student@workstation micro-java]$ oc get cm/env-config
[student@workstation micro-java]$ oc get pods
[student@workstation micro-java]$ curl ${ROUTE_URL}/api/hello
[student@workstation micro-java]$ oc delete project  ${RHT_OCP4_DEV_USER}-micro-java

9.- Finish
--------
[student@workstation ~]$ lab micro-java finish


----------
LAB - Building Cloud-Native Applications for OpenShift
----------

0.- Start
--------
[student@workstation ~]$ lab todo-migrate start

1.- Verify MariaDB up and running
--------
[student@workstation ~]$ source /usr/local/etc/ocp4.config
[student@workstation ~]$ MYSQL_DB=$(echo  mysql.ocp-${RHT_OCP4_WILDCARD_DOMAIN#"apps."})
[student@workstation ~]$ mysql -h${MYSQL_DB} -utodoapp -predhat123 todo
MariaDB [todo]> exit

2.- Create Project + Link to external MariaDB
--------
[student@workstation ~]$ oc login -u ${RHT_OCP4_DEV_USER}  -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
[student@workstation ~]$ oc new-project ${RHT_OCP4_DEV_USER}-todo-migrate
[student@workstation ~]$ oc create service externalname tododb  --external-name ${MYSQL_DB}
[student@workstation ~]$ oc get svc

3.- Create GIT Branch
--------
[student@workstation ~]$ cd ~/DO288-apps
[student@workstation DO288-apps]$ git checkout master
[student@workstation DO288-apps]$ git checkout -b todo-migrate
[student@workstation DO288-apps]$ git push -u origin todo-migrate
[student@workstation DO288-apps]$ cd todo-api-micro
[student@workstation todo-api-micro]$ 

4.- Build with Maven
--------
[student@workstation todo-api-micro]$ mvn fabric8:deploy
[student@workstation todo-api-micro]$ oc get pods
[student@workstation todo-api-micro]$ oc logs -f todo-api-1-hj5hn
...output omitted...
... ERROR [...] ... (("system-property" => "thorntail.datasources.datasources.MySQLDS.connection-url")) - failure
 description: "WFLYCTL0211: Cannot resolve expression
 'jdbc:mysql://${env.DATABASE_SVC_HOSTNAME}:3306/${env.DATABASE_NAME}'" -----> CHECK THIS ERROR


5.- Create Connection File
--------
[student@workstation todo-api-micro]$ vim ./src/main/fabric8/cm.yml
....
apiVersion: v1
kind: ConfigMap
metadata:
 name: db-config
data:
 DATABASE_USER: todoapp
 DATABASE_PASSWORD: redhat123
 DATABASE_SVC_HOSTNAME: tododb
 DATABASE_NAME: todo
.....

[student@workstation todo-api-micro]$ diff  ~/DO288/solutions/todo-migrate/cm.yml ./src/main/fabric8
[student@workstation todo-api-micro]$ cp  ~/DO288/solutions/todo-migrate/cm.yml ./src/main/fabric8


6.- Create Deployment File
--------
[student@workstation todo-api-micro]$ vim src/main/fabric8/deployment.yml 
.....
spec:
 template:
   spec:
     containers:
     - envFrom:
       - configMapRef:
          name: db-config
......

[student@workstation todo-api-micro]$ diff  ~/DO288/solutions/todo-migrate/deployment.yml ./src/main/fabric8/deployment.yml
[student@workstation todo-api-micro]$ cp  ~/DO288/solutions/todo-migrate/deployment.yml ./src/main/fabric8/deployment.yml


7.- Rebuild with Maven
--------
[student@workstation todo-api-micro]$ mvn fabric8:resource-apply
[student@workstation todo-api-micro]$ oc describe dc/todo-api  | grep -A1 "Environment Variables"
[student@workstation todo-api-micro]$ oc get configmap
[student@workstation todo-api-micro]$ oc get pod
[student@workstation todo-api-micro]$ oc logs -f todo-api-3-frhtt
...output omitted...
... INFO [org.wildfly.swarm] (main) THORN99999: Thorntail is Ready ===> CHECK THIS

[student@workstation todo-api-micro]$ ROUTE_URL=$(oc get route todo-api  --template={{.spec.host}})
[student@workstation todo-api-micro]$ curl -s ${ROUTE_URL}/todo/api/items/6 | python -m json.tool

8.- Upload to GIT
--------
[student@workstation todo-api-micro]$ git add src/main/fabric8/*
[student@workstation todo-api-micro]$ git commit -m "add YAML fragments"
[student@workstation todo-api-micro]$ git push origin todo-migrate

9.- Evaluate Work
--------
[student@workstation ~]$ lab todo-migrate grade

10.- Finish
--------
[student@workstation ~]$ lab todo-migrate finish
